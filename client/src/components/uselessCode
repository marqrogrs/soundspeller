
// import Cookies from "js-cookie";
import axios from "axios";

export const getSession = (setAuthentificated) => {
  axios
    .get("http://localhost:5000/api/user/verify", { withCredentials: true })
    .then((res) => setAuthentificated(true))
    .catch((error) => setAuthentificated(false));
};
export const logOut = (setAuthentificated) => {
  axios
    .get("http://localhost:5000/api/user/logout", { withCredentials: true })
    .then((res) => setAuthentificated(false))
    .catch((error) => setAuthentificated(false));
};


      {display === "all" && (
        <React.Fragment>
          <div className="form-group">
            <label htmlFor="email">Type your Email</label>
            <input
              className="form-control"
              type="email"
              name="email"
              value={value}
              placeholder="Email"
              onChange={handleChange}
              required
            />
          </div>

          <div className="form-group ">
            <label htmlFor="password">Type your Password</label>
            <input
              className="form-control"
              type="password"
              name="password"
              value={value}
              placeholder="Password"
              onChange={handleChange}
              required
            />
          </div>
        </React.Fragment>
      )}





    howl = (syllabes) => {
    const sources = [];

    syllabes.map((s) => {
      try {
        sources.push(require(`./../audio/${s}.mp3`));
      } catch (error) {
        try {
          s.split("").map((s) => sources.push(require(`./../audio/${s}.mp3`)));
        } catch (error) {
          console.log(error);
        }
      }
      return null;
    });

    const onEnd = () => {
      this.count += 1;

      try {
        howler[this.count].play();
      } catch (error) {
        howler[this.count - 1].unload();
      }
    };

    // build howler
    const howler = [];

    sources.map((source) =>
      howler.push(new Howl({ src: source, onend: onEnd }))
    );

    try {
      howler[0].play();
    } catch (error) {}
  };



